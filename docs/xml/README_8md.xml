<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@mainpage<sp/>Documentación<sp/>del<sp/>módulo<sp/>YAML<sp/>Toolkit</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Aquí<sp/>va<sp/>la<sp/>descripción<sp/>detallada<sp/>de<sp/>tu<sp/>proyecto.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">#<sp/>YAML<sp/>Toolkit</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Provides<sp/>robust<sp/>YAML<sp/>validation<sp/>and<sp/>file<sp/>handling<sp/>services<sp/>for<sp/>Drupal<sp/>applications.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Table<sp/>of<sp/>contents</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>[Requirements](#requirements)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Installation](#installation)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Configuration](#configuration)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Usage](#usage)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Services](#services)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[API](#api)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Troubleshooting](#troubleshooting)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Maintainers](#maintainers)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Requirements</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>module<sp/>requires<sp/>the<sp/>following<sp/>modules/libraries:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>Drupal:<sp/>^9.0<sp/>||<sp/>^10.0<sp/>||<sp/>^11.0</highlight></codeline>
<codeline><highlight class="normal">-<sp/>PHP:<sp/>^8.1</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Symfony<sp/>YAML<sp/>Component:<sp/>^6.0<sp/>||<sp/>^7.0</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Installation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Install<sp/>as<sp/>you<sp/>would<sp/>normally<sp/>install<sp/>a<sp/>contributed<sp/>Drupal<sp/>module.<sp/>For<sp/>further</highlight></codeline>
<codeline><highlight class="normal">information,<sp/>see<sp/>[Installing<sp/>Drupal<sp/>Modules](https://www.drupal.org/docs/extending-drupal/installing-drupal-modules).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Via<sp/>Composer<sp/>(recommended)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">composer<sp/>require<sp/>drupal/yaml_toolkit</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Manual<sp/>installation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>Download<sp/>the<sp/>latest<sp/>version<sp/>from<sp/>the<sp/>[project<sp/>page](https://www.drupal.org/project/yaml_toolkit).</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>Extract<sp/>the<sp/>archive<sp/>to<sp/>your<sp/>`modules/contrib`<sp/>directory.</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>Enable<sp/>the<sp/>module<sp/>at<sp/>`admin/modules`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Configuration</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">No<sp/>configuration<sp/>is<sp/>required.<sp/>The<sp/>module<sp/>provides<sp/>services<sp/>that<sp/>can<sp/>be<sp/>injected</highlight></codeline>
<codeline><highlight class="normal">into<sp/>your<sp/>custom<sp/>code.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Basic<sp/>YAML<sp/>validation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```php</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Get<sp/>the<sp/>validator<sp/>service</highlight></codeline>
<codeline><highlight class="normal">$validator<sp/>=<sp/>\Drupal::service(&apos;yaml_toolkit.validator&apos;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Validate<sp/>a<sp/>YAML<sp/>string</highlight></codeline>
<codeline><highlight class="normal">$yamlString<sp/>=<sp/>&quot;</highlight></codeline>
<codeline><highlight class="normal">key1:<sp/>value1</highlight></codeline>
<codeline><highlight class="normal">key2:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>item1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>item2</highlight></codeline>
<codeline><highlight class="normal">&quot;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$isValid<sp/>=<sp/>$validator-&gt;checkYaml($yamlString);</highlight></codeline>
<codeline><highlight class="normal">$result<sp/>=<sp/>$validator-&gt;getResult();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>($isValid)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>$parsedData<sp/>=<sp/>$result[&apos;parsed&apos;];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>$yamlOutput<sp/>=<sp/>$result[&apos;yaml&apos;];</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>File<sp/>operations</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```php</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Get<sp/>the<sp/>storage<sp/>service</highlight></codeline>
<codeline><highlight class="normal">$storage<sp/>=<sp/>\Drupal::service(&apos;yaml_toolkit.storage&apos;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Load<sp/>YAML<sp/>from<sp/>file</highlight></codeline>
<codeline><highlight class="normal">$data<sp/>=<sp/>$storage-&gt;load(&apos;path/to/config.yml&apos;,<sp/>&apos;my_module&apos;,<sp/>TRUE);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>($data<sp/>!==<sp/>FALSE)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Process<sp/>the<sp/>loaded<sp/>data</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>$zones<sp/>=<sp/>$data[&apos;zones&apos;]<sp/>??<sp/>[];</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Save<sp/>YAML<sp/>to<sp/>file</highlight></codeline>
<codeline><highlight class="normal">$configData<sp/>=<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&apos;zones&apos;<sp/>=&gt;<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&apos;content&apos;<sp/>=&gt;<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&apos;title&apos;<sp/>=&gt;<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;plugin&apos;<sp/>=&gt;<sp/>&apos;title_template&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;tag&apos;<sp/>=&gt;<sp/>&apos;h2&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>],</highlight></codeline>
<codeline><highlight class="normal">];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$success<sp/>=<sp/>$storage-&gt;save(&apos;path/to/config.yml&apos;,<sp/>$configData,<sp/>&apos;my_module&apos;,<sp/>TRUE);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(!$success)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>$error<sp/>=<sp/>$storage-&gt;getInfo();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>\Drupal::logger(&apos;my_module&apos;)-&gt;error($error[&apos;error_text&apos;]);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Services</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>yaml_toolkit.validator</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Validates<sp/>YAML<sp/>content<sp/>in<sp/>multiple<sp/>formats:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>Raw<sp/>YAML<sp/>strings</highlight></codeline>
<codeline><highlight class="normal">-<sp/>PHP<sp/>arrays<sp/>(will<sp/>be<sp/>dumped<sp/>and<sp/>re-parsed)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Arrays<sp/>of<sp/>YAML<sp/>strings</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**Service<sp/>ID**:<sp/>`yaml_toolkit.validator`<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">**Interface**:<sp/>`Drupal\yaml_toolkit\Contract\Service\YamlValidatorInterface`<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">**Class**:<sp/>`Drupal\yaml_toolkit\Service\YamlValidator`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Methods</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`checkYaml($data)`:<sp/>Validates<sp/>YAML<sp/>content</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`getResult()`:<sp/>Returns<sp/>detailed<sp/>validation<sp/>information</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>yaml_toolkit.storage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Handles<sp/>YAML<sp/>file<sp/>operations<sp/>with<sp/>validation<sp/>and<sp/>error<sp/>handling.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**Service<sp/>ID**:<sp/>`yaml_toolkit.storage`<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">**Interface**:<sp/>`Drupal\yaml_toolkit\Contract\Service\YamlStorageInterface`<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">**Class**:<sp/>`Drupal\yaml_toolkit\Service\YamlStorage`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Methods</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`load($filePath,<sp/>$loggerChannel,<sp/>$verbose)`:<sp/>Load<sp/>and<sp/>validate<sp/>YAML<sp/>file</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`save($filePath,<sp/>$data,<sp/>$loggerChannel,<sp/>$verbose)`:<sp/>Save<sp/>data<sp/>as<sp/>YAML<sp/>file</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`getInfo()`:<sp/>Get<sp/>detailed<sp/>information<sp/>about<sp/>the<sp/>last<sp/>operation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>YamlValidatorInterface</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```php</highlight></codeline>
<codeline><highlight class="normal">interface<sp/>YamlValidatorInterface<sp/>{</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_SUCCESS<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_VALIDATION_FAILED<sp/>=<sp/>10;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_SCALAR_VALUE<sp/>=<sp/>11;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_PARSE_FAILED<sp/>=<sp/>12;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_UNSUPPORTED_TYPE<sp/>=<sp/>13;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_NO_DATA<sp/>=<sp/>14;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Validates<sp/>the<sp/>given<sp/>content<sp/>(YAML<sp/>string<sp/>or<sp/>array).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>mixed<sp/>$content</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>YAML<sp/>string,<sp/>PHP<sp/>array,<sp/>or<sp/>array<sp/>of<sp/>strings.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>bool</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>TRUE<sp/>if<sp/>validation<sp/>passes,<sp/>FALSE<sp/>otherwise.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>public<sp/>function<sp/>checkYaml($content):<sp/>bool;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Returns<sp/>detailed<sp/>information<sp/>from<sp/>the<sp/>last<sp/>validation<sp/>attempt.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>array</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>An<sp/>associative<sp/>array<sp/>with<sp/>keys:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>status:<sp/>&quot;success&quot;<sp/>or<sp/>&quot;error&quot;.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>type:<sp/>Type<sp/>of<sp/>input<sp/>processed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>message:<sp/>Human<sp/>readable<sp/>message.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>public<sp/>function<sp/>getResult():<sp/>array;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>YamlStorageInterface</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```php</highlight></codeline>
<codeline><highlight class="normal">interface<sp/>YamlStorageInterface<sp/>{</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_SUCCESS<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_EMPTY_PATH<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_FILE_NOT_FOUND<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_FILE_NOT_READABLE<sp/>=<sp/>3;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_FILE_NOT_WRITABLE<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_READ_FAILED<sp/>=<sp/>5;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_EMPTY_FILE<sp/>=<sp/>6;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_NO_YAML_DATA<sp/>=<sp/>7;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_WRITE_FAILED<sp/>=<sp/>8;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>ERROR_NO_DATA<sp/>=<sp/>9;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Save<sp/>YAML<sp/>data<sp/>into<sp/>a<sp/>file.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>string<sp/>$filePath</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Path<sp/>to<sp/>the<sp/>YAML<sp/>file.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>mixed<sp/>$data</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Data<sp/>to<sp/>save<sp/>(array<sp/>or<sp/>YAML<sp/>string).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>string<sp/>$loggerChannel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>logger<sp/>channel<sp/>to<sp/>use.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>bool<sp/>$verbose</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>If<sp/>TRUE,<sp/>display<sp/>errors<sp/>in<sp/>UI<sp/>messenger.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>bool</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>TRUE<sp/>if<sp/>saved<sp/>successfully,<sp/>FALSE<sp/>otherwise.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>public<sp/>function<sp/>save(string<sp/>$filePath,<sp/>array<sp/>$data,<sp/>string<sp/>$loggerChannel<sp/>=<sp/>&apos;default&apos;,<sp/>bool<sp/>$verbose<sp/>=<sp/>FALSE);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Load<sp/>YAML<sp/>data<sp/>from<sp/>a<sp/>file.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>string<sp/>$filePath</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Path<sp/>to<sp/>the<sp/>YAML<sp/>file<sp/>(supports<sp/>stream<sp/>wrappers).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>string<sp/>$loggerChannel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>logger<sp/>channel<sp/>to<sp/>use<sp/>for<sp/>error<sp/>logging.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@param<sp/>bool<sp/>$verbose</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>If<sp/>TRUE,<sp/>display<sp/>errors<sp/>in<sp/>UI<sp/>messenger<sp/>in<sp/>addition<sp/>to<sp/>logging.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>array|false</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Parsed<sp/>YAML<sp/>data<sp/>as<sp/>array,<sp/>or<sp/>FALSE<sp/>on<sp/>failure.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Use<sp/>getInfo()<sp/>to<sp/>retrieve<sp/>detailed<sp/>error<sp/>information.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>public<sp/>function<sp/>load(string<sp/>$filePath,<sp/>string<sp/>$loggerChannel<sp/>=<sp/>&apos;default&apos;,<sp/>bool<sp/>$verbose<sp/>=<sp/>FALSE);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>Get<sp/>information<sp/>about<sp/>the<sp/>last<sp/>operation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/>@return<sp/>array</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*<sp/><sp/><sp/>Error<sp/>code<sp/>and<sp/>message.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>public<sp/>function<sp/>getInfo():<sp/>array;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Error<sp/>codes</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>validator<sp/>uses<sp/>the<sp/>following<sp/>error<sp/>codes:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`0`:<sp/>Success</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`10`:<sp/>YAML<sp/>validation<sp/>failed</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`11`:<sp/>Scalar<sp/>value<sp/>(not<sp/>supported)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`12`:<sp/>Conversion<sp/>to<sp/>YAML<sp/>failed</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`13`:<sp/>Unsupported<sp/>input<sp/>type</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`14`:<sp/>No<sp/>data<sp/>provided</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>storage<sp/>service<sp/>uses<sp/>additional<sp/>error<sp/>codes:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`1`:<sp/>Empty<sp/>file<sp/>path</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`2`:<sp/>File<sp/>not<sp/>found</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`3`:<sp/>File<sp/>not<sp/>readable</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`4`:<sp/>File<sp/>not<sp/>writable</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`5`:<sp/>File<sp/>read<sp/>failed</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`6`:<sp/>Empty<sp/>file</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`7`:<sp/>No<sp/>YAML<sp/>data</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`8`:<sp/>File<sp/>write<sp/>failed</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`9`:<sp/>YAML<sp/>dump<sp/>failed</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Troubleshooting</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Common<sp/>issues</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**&quot;File<sp/>not<sp/>found&quot;<sp/>errors**</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Check<sp/>file<sp/>permissions</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Verify<sp/>the<sp/>file<sp/>path<sp/>is<sp/>correct</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Ensure<sp/>the<sp/>file<sp/>exists<sp/>before<sp/>attempting<sp/>to<sp/>load</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**&quot;YAML<sp/>validation<sp/>failed&quot;**</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Check<sp/>YAML<sp/>syntax<sp/>using<sp/>an<sp/>online<sp/>validator</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Ensure<sp/>proper<sp/>indentation<sp/>(2<sp/>spaces<sp/>per<sp/>level)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Verify<sp/>quotes<sp/>and<sp/>special<sp/>characters<sp/>are<sp/>properly<sp/>escaped</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**&quot;File<sp/>not<sp/>writable&quot;<sp/>errors**</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Check<sp/>directory<sp/>and<sp/>file<sp/>permissions</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Ensure<sp/>the<sp/>web<sp/>server<sp/>can<sp/>write<sp/>to<sp/>the<sp/>target<sp/>directory</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Verify<sp/>disk<sp/>space<sp/>is<sp/>available</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Debugging</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enable<sp/>verbose<sp/>mode<sp/>to<sp/>display<sp/>errors<sp/>in<sp/>the<sp/>Drupal<sp/>UI:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```php</highlight></codeline>
<codeline><highlight class="normal">$storage<sp/>=<sp/>\Drupal::service(&apos;yaml_toolkit.storage&apos;);</highlight></codeline>
<codeline><highlight class="normal">$result<sp/>=<sp/>$storage-&gt;load(&apos;config.yml&apos;,<sp/>&apos;my_module&apos;,<sp/>TRUE);<sp/>//<sp/>verbose<sp/>=<sp/>TRUE</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Check<sp/>the<sp/>logs<sp/>for<sp/>detailed<sp/>error<sp/>information:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">drush<sp/>watchdog-show<sp/>--type=my_module</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Maintainers</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>[Carlos<sp/>Espino<sp/>Angulo](https://www.drupal.org/u/carlos-espino)</highlight></codeline>
    </programlisting>
    <location file="README.md"/>
  </compounddef>
</doxygen>
